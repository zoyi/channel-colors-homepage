{"version":3,"sources":["components/MenuPanel/MenuPanel.module.scss","components/Content/Content.module.scss","App.module.scss","components/Content/sections/Swatches/Swatches.module.scss","contexts/index.js","components/MenuPanel/MenuPanel.jsx","components/Content/sections/Overview/Overview.jsx","components/Content/sections/Downloads/Downloads.jsx","components/Content/sections/Swatches/Swatches.jsx","components/Content/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorContext","createContext","AnchorLink","href","children","otherProps","handleClick","useCallback","e","target","window","document","getElementById","preventDefault","ReactDOM","findDOMNode","scrollIntoView","onClick","MenuPanel","colors","useContext","className","styles","MenuItem","SubMenu","_","keys","map","family","key","classNames","SubMenuItem","rel","Overview","id","Downloads","download","Swatch","name","color","hex","opacity","Backer","Color","style","backgroundColor","round","Label","Hex","Swatches","ColorFamily","Colors","Content","App","defaultColors","useMemo","flow","toPairs","sortBy","regex","match","Number","MAX_SAFE_INTEGER","groupBy","_defaultColors","Provider","value","Boolean","location","hostname","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc40be07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuPanel\":\"MenuPanel_MenuPanel__ADdVF\",\"MenuItem\":\"MenuPanel_MenuItem__1gS_A\",\"SubMenu\":\"MenuPanel_SubMenu__1hlWp\",\"SubMenuItem\":\"MenuPanel_SubMenuItem__3JBDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__20LeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorFamily\":\"Swatches_ColorFamily__2mwnN\",\"Colors\":\"Swatches_Colors__3mm_0\",\"Swatch\":\"Swatches_Swatch__1kOdp\",\"Backer\":\"Swatches_Backer__189Pn\",\"Color\":\"Swatches_Color__16_Ih\",\"Label\":\"Swatches_Label__2qZrD\",\"Hex\":\"Swatches_Hex__37gXC\"};","import { createContext } from 'react';\n\nexport const ColorContext = createContext({});\n","import React, { useContext, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n// import AnchorLink from 'react-anchor-link-smooth-scroll'\nimport _ from 'lodash';\n\nimport { ColorContext } from '../../contexts'\nimport styles from './MenuPanel.module.scss';\n\nfunction AnchorLink({ href, children, ...otherProps }) {\n  const handleClick = useCallback((e) => {\n    const target = window.document.getElementById(href);\n    if (target) {\n      e.preventDefault();\n      const node = ReactDOM.findDOMNode(target);\n      node.scrollIntoView();\n    }\n  }, [href]);\n\n  return (\n    <a\n      {...otherProps}\n      href={href}\n      onClick={handleClick}\n    >\n      { children }\n    </a>\n  )\n}\n\nfunction MenuPanel() {\n  const colors = useContext(ColorContext);\n\n  return (\n    <div className={styles.MenuPanel}>\n      <AnchorLink className={styles.MenuItem} href=\"overview\">\n        Overview\n      </AnchorLink>\n\n      <AnchorLink className={styles.MenuItem} href=\"downloads\">\n        Downloads\n      </AnchorLink>\n\n      <div>\n        <AnchorLink className={styles.MenuItem} href=\"colors\">\n          Color Swatches\n        </AnchorLink>\n\n        <div className={styles.SubMenu}>\n          { _.keys(colors).map((family) => (\n            <AnchorLink\n              key={family}\n              className={classNames(styles.MenuItem, styles.SubMenuItem)}\n              href={`colors-${family}`}\n            >\n              { family }\n            </AnchorLink>\n          )) }\n        </div>\n      </div>\n\n      <a\n        className={styles.MenuItem}\n        href=\"https://github.com/zoyi/channel-colors\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        GitHub\n      </a>\n    </div>\n  )\n}\n\nexport default MenuPanel\n","import React from 'react';\n\nfunction Overview() {\n  return (\n    <section id=\"overview\">\n      <h1>Overview</h1>\n      <p>\n        Channel-Colors is an open-sourced color scheme used and created by <a href=\"https://www.channel.io\">Channel.io</a>.\n      </p>\n    </section>\n  )\n}\n\nexport default Overview\n","import React from 'react';\n\nfunction Downloads() {\n  return (\n    <section id=\"downloads\">\n      <h1>Downloads</h1>\n\n      <h2>SCSS</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.scss\" download>Download</a>\n\n      <h2>CSS</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.css\" download>Download</a>\n\n      <h2>Android XML</h2>\n      <a href=\"http://cdn.channel.io/colors/android.default.colors.xml\" download>Download</a>\n\n      <h2>JSON</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.json\" download>Download</a>\n    </section>\n  )\n}\n\nexport default Downloads\n","import React, { useContext } from 'react';\nimport _ from 'lodash';\n\nimport { ColorContext } from '../../../../contexts'\nimport styles from './Swatches.module.scss';\n\nfunction Swatch({ name, color }) {\n  const { hex, opacity } = color;\n  return (\n    <div className={styles.Swatch}>\n      { (opacity < 100) && (<div className={styles.Backer} />) }\n      <div\n        className={styles.Color}\n        style={{ backgroundColor: hex, opacity: _.round(opacity / 100, 2) }}\n      />\n      <div className={styles.Label}>\n        <div>{ name }</div>\n        <div className={styles.Hex}>{ hex }</div>\n      </div>\n    </div>\n  )\n}\n\nfunction Swatches() {\n  const colors = useContext(ColorContext);\n\n  return (\n    <section id=\"colors\">\n      <h1>Color Swatches</h1>\n\n      { _.map(colors, (colors) => (\n        <div\n          id={`colors-${colors[0].family}`}\n          key={colors[0].family}\n          className={styles.ColorFamily}\n        >\n          <h2>{ colors[0].family }</h2>\n          <div className={styles.Colors}>\n            { _.map(colors, (color) => (\n              <Swatch\n                key={color.name}\n                name={color.name}\n                color={color}\n              />\n            )) }\n          </div>\n        </div>\n      )) }\n    </section>\n  )\n}\n\nexport default Swatches\n","import React from 'react';\n\nimport { Overview, Downloads, Swatches } from './sections'\nimport styles from './Content.module.scss'\n\nfunction Content() {\n  return (\n    <div className={styles.Content}>\n      <Overview />\n      <Downloads />\n      <Swatches />\n    </div>\n  )\n}\n\nexport default Content\n","import React, { useMemo } from 'react';\nimport { flow, groupBy, map, sortBy, toPairs } from 'lodash/fp';\n\nimport _defaultColors from '../node_modules/channel-colors/dist/default.colors.json';\nimport { ColorContext } from './contexts';\nimport MenuPanel from './components/MenuPanel';\nimport Content from './components/Content';\nimport styles from './App.module.scss'\n\nfunction App() {\n  const defaultColors = useMemo(() => flow(\n    toPairs,\n    map(([name, color]) => ({ name, ...color })),\n    sortBy(({ name }) => {\n      const regex = /[a-z]+(\\d+)/;\n      if (name.match(regex)) {\n        const match = name.match(regex);\n        return Number(match[1]);\n      }\n      if (name.match(/[a-z]+/)) {\n        return Number.MAX_SAFE_INTEGER\n      }\n      return 0;\n    }),\n    groupBy('family'),\n  )(_defaultColors), []);\n\n  return (\n    <div className={styles.App}>\n      <ColorContext.Provider value={defaultColors}>\n        <MenuPanel />\n        <Content />\n      </ColorContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global.module.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}