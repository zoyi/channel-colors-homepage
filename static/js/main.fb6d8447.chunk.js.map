{"version":3,"sources":["components/ToggleButton/ToggleButton.module.scss","components/Content/sections/Swatches/Swatches.module.scss","components/Content/Content.module.scss","App.module.scss","actions/index.js","constants/themes.js","reducers/themeReducer.js","reducers/index.js","contexts/index.js","utils/colorUtils.js","selectors/themeSelector.js","components/MenuPanel/MenuPanel.jsx","components/Content/sections/Overview/Overview.jsx","components/Content/sections/Downloads/Downloads.jsx","components/ToggleButton/ToggleButton.js","components/Swatch/Swatch.jsx","components/Content/sections/Swatches/Swatches.jsx","components/Content/Content.jsx","App.js","serviceWorker.js","index.js","components/MenuPanel/MenuPanel.module.scss","components/Swatch/Swatch.module.scss"],"names":["module","exports","SET_THEME","DEFAULT_THEME","DARK_THEME","initialState","theme","reducers","themeReducer","state","action","type","_","get","ColorContext","createContext","parseColors","flow","toPairs","map","name","sortBy","sortColorFnc","groupBy","family","opacity","includes","regex","match","Number","MAX_SAFE_INTEGER","getTheme","getThemeColors","createSelector","defaultColors","darkColors","AnchorLink","href","children","otherProps","handleClick","useCallback","e","target","window","document","getElementById","preventDefault","ReactDOM","findDOMNode","scrollIntoView","onClick","MenuPanel","colors","useContext","className","styles","MenuItem","SubMenu","keys","key","classNames","SubMenuItem","rel","Overview","id","Downloads","download","PADDING","ToggleButton","style","checked","size","noop","width","height","borderRadius","wrapper","on","off","transform","content","Swatch","color","hex","Backer","Color","backgroundColor","round","ColorBorder","Label","Hex","Swatches","dispatch","useDispatch","currentTheme","useSelector","themeSelector","handleChangeTheme","payload","ThemeToggleWrapper","ColorFamily","SwatchWrapper","Content","App","themeColors","useEffect","root","documentElement","values","kebabCase","forEach","setProperty","Provider","value","Boolean","location","hostname","rootReducer","combineReducers","store","createStore","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb6d8447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ToggleButton_wrapper__3ywln\",\"content\":\"ToggleButton_content__3ecR_\",\"on\":\"ToggleButton_on__3-Eo9\",\"off\":\"ToggleButton_off__3YXfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeToggleWrapper\":\"Swatches_ThemeToggleWrapper__1sLyB\",\"ToggleButton\":\"Swatches_ToggleButton__2LRGq\",\"ColorFamily\":\"Swatches_ColorFamily__2mwnN\",\"SwatchWrapper\":\"Swatches_SwatchWrapper__3Sqd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__20LeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","export const SET_THEME = 'SET_THEME';\n","export const DEFAULT_THEME = 'default_theme';\nexport const DARK_THEME = 'dark_theme';\n","import _ from 'lodash';\n\nimport { SET_THEME } from '../actions'\nimport { DEFAULT_THEME } from '../constants/themes'\n\nconst initialState = {\n  theme: DEFAULT_THEME,\n};\n\nexport default function themeReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_THEME: {\n      return {\n        ...state,\n        theme: _.get(action, 'payload.theme', DEFAULT_THEME),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import themeReducer from './themeReducer';\n\nconst reducers = {\n  themeReducer,\n};\n\nexport default reducers;\n","import { createContext } from 'react';\n\nexport const ColorContext = createContext({});\n","import _ from 'lodash';\nimport { flow, groupBy, map, sortBy, toPairs } from 'lodash/fp';\n\nexport const parseColors = flow(\n  toPairs,\n  map(([name, color]) => ({ name, ...color })),\n  sortBy(sortColorFnc),\n  groupBy('family'),\n);\n\nexport function swapColorName(colorJSON) {\n  return _.mapValues(colorJSON, (colors) => {\n    const center = _.round(colors.length / 2);\n    for (let i = 0; i < center; i++) {\n      const li = colors.length - (i + 1);\n      const n1 = colors[i].name;\n      const n2 = colors[li].name;\n      colors[i].name = n2;\n      colors[li].name = n1;\n    }\n    return _.sortBy(colors, sortColorFnc);\n  })\n}\n\nexport function sortColorFnc({ family, name, opacity }) {\n  if (['black', 'white'].includes(family)) {\n    return opacity;\n  }\n  const regex = /[a-z]+(\\d+)/;\n  if (name.match(regex)) {\n    const match = name.match(regex);\n    return Number(match[1]);\n  }\n  if (name.match(/[a-z]+/)) {\n    return Number.MAX_SAFE_INTEGER\n  }\n  return 0;\n}\n","import { createSelector } from 'reselect';\n\nimport { DEFAULT_THEME, DARK_THEME } from '../constants/themes';\nimport { parseColors } from '../utils/colorUtils';\n\nimport defaultColors from '../../node_modules/channel-colors/dist/default.colors.json';\nimport darkColors from '../../node_modules/channel-colors/dist/dark.colors.json';\n\nconst getTheme = state => state.themeReducer.theme;\n\nconst getThemeColors = createSelector(\n  getTheme,\n  (theme) => {\n    switch (theme) {\n      case DARK_THEME: {\n        return parseColors(defaultColors);\n      }\n      case DEFAULT_THEME:\n      default: {\n        return parseColors(darkColors);\n      }\n    }\n  },\n);\n\nexport default {\n  getTheme,\n  getThemeColors,\n}\n","import React, { useContext, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n// import AnchorLink from 'react-anchor-link-smooth-scroll'\nimport _ from 'lodash';\n\nimport { ColorContext } from '../../contexts'\nimport styles from './MenuPanel.module.scss';\n\nfunction AnchorLink({ href, children, ...otherProps }) {\n  const handleClick = useCallback((e) => {\n    const target = window.document.getElementById(href);\n    if (target) {\n      e.preventDefault();\n      const node = ReactDOM.findDOMNode(target);\n      node.scrollIntoView();\n    }\n  }, [href]);\n\n  return (\n    <a\n      {...otherProps}\n      href={href}\n      onClick={handleClick}\n    >\n      { children }\n    </a>\n  )\n}\n\nfunction MenuPanel() {\n  const colors = useContext(ColorContext);\n\n  return (\n    <div className={styles.MenuPanel}>\n      <AnchorLink className={styles.MenuItem} href=\"overview\">\n        Overview\n      </AnchorLink>\n\n      <AnchorLink className={styles.MenuItem} href=\"downloads\">\n        Downloads\n      </AnchorLink>\n\n      <div>\n        <AnchorLink className={styles.MenuItem} href=\"colors\">\n          Color Swatches\n        </AnchorLink>\n\n        <div className={styles.SubMenu}>\n          { _.keys(colors).map((family) => (\n            <AnchorLink\n              key={family}\n              className={classNames(styles.MenuItem, styles.SubMenuItem)}\n              href={`colors-${family}`}\n            >\n              { family }\n            </AnchorLink>\n          )) }\n        </div>\n      </div>\n\n      <a\n        className={styles.MenuItem}\n        href=\"https://github.com/zoyi/channel-colors\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        GitHub\n      </a>\n    </div>\n  )\n}\n\nexport default MenuPanel\n","import React from 'react';\n\nfunction Overview() {\n  return (\n    <section id=\"overview\">\n      <h1>Overview</h1>\n      <p>\n        Channel-Colors is an open-sourced color scheme used and created by <a href=\"https://www.channel.io\">Channel.io</a>.\n      </p>\n    </section>\n  )\n}\n\nexport default Overview\n","import React from 'react';\n\nfunction Downloads() {\n  return (\n    <section id=\"downloads\">\n      <h1>Downloads</h1>\n\n      <h2>SCSS</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.scss\" download>Download</a>\n\n      <h2>CSS</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.css\" download>Download</a>\n\n      <h2>Android XML</h2>\n      <a href=\"http://cdn.channel.io/colors/android.default.colors.xml\" download>Download</a>\n\n      <h2>JSON</h2>\n      <a href=\"http://cdn.channel.io/colors/default.colors.json\" download>Download</a>\n    </section>\n  )\n}\n\nexport default Downloads\n","/* NOTE: from ch-desk-web */\n\n/* External dependencies */\nimport React from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\n/* Internal dependencies */\nimport styles from './ToggleButton.module.scss';\n\nconst PADDING = 4;\n\nfunction ToggleButton({ className, style, checked, size = 16, onClick = _.noop }) {\n  return (\n    <div\n      style={{\n        width: `${size * 2}px`,\n        height: `${size + PADDING}px`,\n        borderRadius: `${(size + PADDING) / 2}px`,\n        ...style,\n      }}\n      className={classNames(\n        className,\n        styles.wrapper,\n        checked ? styles.on : styles.off,\n      )}\n      onClick={onClick}\n    >\n      <div\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          transform: checked ? `translateX(${size - PADDING}px)` : null,\n        }}\n        className={styles.content}\n      />\n    </div>\n  );\n}\n\nexport default ToggleButton\n","import React from 'react';\nimport _ from 'lodash';\n\nimport styles from './Swatch.module.scss';\n\nfunction Swatch({ name, color }) {\n  const { hex, opacity } = color;\n  return (\n    <div className={styles.Swatch}>\n      { (opacity < 100) && (<div className={styles.Backer} />) }\n\n      <div\n        className={styles.Color}\n        style={{ backgroundColor: hex, opacity: _.round(opacity / 100, 2) }}\n      />\n\n      <div className={styles.ColorBorder} />\n\n      <div className={styles.Label}>\n        <div>{ name }</div>\n        <div className={styles.Hex}>{ hex }</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Swatch\n","import React, { useContext, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport { ColorContext } from '../../../../contexts';\nimport { SET_THEME } from '../../../../actions';\nimport themeSelector from '../../../../selectors/themeSelector';\nimport { DEFAULT_THEME, DARK_THEME } from '../../../../constants/themes';\nimport ToggleButton from '../../../ToggleButton';\nimport Swatch from '../../../Swatch';\nimport styles from './Swatches.module.scss';\n\nfunction Swatches() {\n  const colors = useContext(ColorContext);\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(themeSelector.getTheme);\n\n  const handleChangeTheme = useCallback(() => {\n    const theme = (currentTheme === DEFAULT_THEME) ? DARK_THEME : DEFAULT_THEME;\n    dispatch({ type: SET_THEME, payload: { theme } });\n  }, [dispatch, currentTheme]);\n\n  return (\n    <section id=\"colors\">\n      <h1>Color Swatches</h1>\n\n      <div className={styles.ThemeToggleWrapper}>\n        <h3>Dark Theme</h3>\n        <ToggleButton\n          className={styles.ToggleButton}\n          checked={currentTheme === DARK_THEME}\n          onClick={handleChangeTheme}\n        />\n      </div>\n\n      { _.map(colors, (colors) => (\n        <div\n          id={`colors-${colors[0].family}`}\n          key={colors[0].family}\n          className={styles.ColorFamily}\n        >\n          <h2>{ colors[0].family }</h2>\n          <div className={styles.SwatchWrapper}>\n            { _.map(colors, (color) => (\n              <Swatch\n                key={color.name}\n                name={color.name}\n                color={color}\n              />\n            )) }\n          </div>\n        </div>\n      )) }\n    </section>\n  )\n}\n\nexport default Swatches\n","import React from 'react';\n\nimport { Overview, Downloads, Swatches } from './sections'\nimport styles from './Content.module.scss'\n\nfunction Content() {\n  return (\n    <div className={styles.Content}>\n      <Overview />\n      <Downloads />\n      <Swatches />\n    </div>\n  )\n}\n\nexport default Content\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { flow, toPairs, map, forEach } from 'lodash/fp';\nimport _ from 'lodash';\n\nimport { ColorContext } from './contexts';\nimport { DARK_THEME } from './constants/themes';\nimport themeSelector from './selectors/themeSelector';\nimport MenuPanel from './components/MenuPanel';\nimport Content from './components/Content';\nimport styles from './App.module.scss'\n\nimport defaultColors from '../node_modules/channel-colors/dist/default.colors.json';\nimport darkColors from '../node_modules/channel-colors/dist/dark.colors.json';\n\nfunction App() {\n  const currentTheme = useSelector(themeSelector.getTheme);\n  const themeColors = useSelector(themeSelector.getThemeColors);\n\n  useEffect(() => {\n    const root = document.documentElement;\n    flow(\n      toPairs,\n      map(([name, values]) => ({\n        name: `--${_.kebabCase(name)}`,\n        hex: values.hex,\n      })),\n      forEach(({ name, hex }) => {\n        root.style.setProperty(name, hex);\n      })\n    )(\n      (currentTheme === DARK_THEME) ? darkColors : defaultColors\n    )\n  }, [currentTheme]);\n\n  return (\n    <div className={styles.App}>\n      <ColorContext.Provider value={themeColors}>\n        <MenuPanel />\n        <Content />\n      </ColorContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport reducers from './reducers';\n\nimport './styles/global.module.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuPanel\":\"MenuPanel_MenuPanel__ADdVF\",\"MenuItem\":\"MenuPanel_MenuItem__1gS_A\",\"SubMenu\":\"MenuPanel_SubMenu__1hlWp\",\"SubMenuItem\":\"MenuPanel_SubMenuItem__3JBDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Swatch\":\"Swatch_Swatch__1hxw4\",\"Backer\":\"Swatch_Backer__1fWfX\",\"Color\":\"Swatch_Color__VzRYV\",\"ColorBorder\":\"Swatch_ColorBorder__2pizc\",\"Label\":\"Swatch_Label__3PEUu\",\"Hex\":\"Swatch_Hex__Z7hJs\"};"],"sourceRoot":""}